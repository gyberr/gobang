#include <stdio.h>
#include  <time.h>
#include <windows.h>
#include <stdlib.h>
void menu1()
{
	printf("**************************************\n");
	printf("**********1.start*******2.exit********\n");
	printf("**************************************\n");

}
void menu2()
{
	printf("**************************************\n");
	printf("******1.tow persons***2.one person****\n");
	printf("**************************************\n");
}
void qipan(char c[17][17])
{
	int k,t;
	printf("  y");
	for (k = 1; k <= 9; k++)
	{
		printf("%d  ", k);
	}
	for (k = 10; k <= 17; k++)
	{
		printf("%d ", k);
	}
	printf("\n");
	printf("x ");
	for (t = 0; t <= 51; t++)
	{
		printf("_");
	}
	printf("\n");
	for (k = 0; k <= 16; k++)
	{
		printf("%d", k+1);
		if (k <= 8)
			printf(" ");
		for (t = 0; t <= 16; t++)
		{
			printf("|%c ", c[k][t]);
		}
		printf("|");
		printf("\n");
		printf("  ");
		for (t = 0; t <= 51; t++)
		{
			printf("_");
		}
		printf("\n");
	}
}
int game(char h)
{
	if (h == ' ')
		return 1;
	else
		return 0;
}

int wina(char c[17][17])
{
	int i, j,p;
	int a = 0;
	for (i = 0; i <= 16; i++)
	{
		for (j = 0; j <= 16; j++)
		{
			if (c[i][j] == '#')
			{
				a++;
				if (a >= 5)
					return 1;
			}
			else
				a = 0;
		}
		a = 0;
	}
	for (j= 0; j <= 16; j++)
	{
		for (i= 0; i <= 16; i++)
		{
			for (p = 0; i + p <= 16 && j + p <= 16; p++)
			{
				if (c[i+p][j+p] == '#')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i-p>=0&& j + p <= 16; p++)
			{
				if (c[i -p][j + p] == '#')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i + p <= 16 && j-p>=0; p++)
			{
				if (c[i + p][j -p] == '#')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i -p>=0&& j-p>=0; p++)
			{
				if (c[i -p][j - p] == '#')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			if (c[i][j] == '#')
			{
				a++;
				if (a >= 5)
					return 1;
			}
			else
				a = 0;
		}
		a = 0;
	}
	return 0;
}
int winb(char c[17][17])
{
	int i, j,p, a = 0;
	for (i = 0; i <= 16; i++)
	{
		for (j = 0; j <= 16; j++)
		{
			if (c[i][j] == '*')
			{
				a++;
				if (a >= 5)
					return 1;
			}
			else
				a = 0;
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			if (c[i][j] == '*')
			{
				a++;
				if (a >= 5)
					return 1;
			}
			else
				a = 0;
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i + p <= 16 && j + p <= 16; p++)
			{
				if (c[i + p][j + p] == '*')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i - p >= 0 && j + p <= 16; p++)
			{
				if (c[i - p][j + p] == '*')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i + p <= 16 && j - p >= 0; p++)
			{
				if (c[i + p][j - p] == '*')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	for (j = 0; j <= 16; j++)
	{
		for (i = 0; i <= 16; i++)
		{
			for (p = 0; i - p >= 0 && j - p >= 0; p++)
			{
				if (c[i - p][j - p] == '* ')
				{
					a++;
					if (a >= 5)
						return 1;
				}
				else
					a = 0;
			}
		}
		a = 0;
	}
	return 0;
}

int main()
{
	int m, n,b,l,e;
	char h;
	char c[17][17] = { 0 };
	for (m = 0; m <= 16; m++)
	{
		for (n = 0; n <= 16; n++)
			c[m][n] = ' ';
	}
	b = 0;
	restart:
	srand((unsigned int)time(NULL));
	menu1();
	do
	{
		scanf_s("%d", &b);
		if (b == 1)
			break;
		else if (b == 2)
			return 0;
		else
		{
			printf("输入错误");
			Sleep(1000);
			system("cls");
			menu1();
		}

	} while (1);
	b = 0;
	system("cls");
	menu2();
	do
	{
		scanf_s("%d", &b);
		if (b == 1||b==2)
			break;
		else
		{
			printf("输入错误");
			Sleep(1000);
			system("cls");
			menu2();
		}

	} while (1);
	system("cls");
	if (b == 1)
	{
		while (1)
		{
		restartaa:
			qipan(c);
			printf("玩家1请输入坐标x,y\n");
			scanf_s("%d,%d", &l, &e);
			m = l - 1;
			n = e - 1;
			h = c[m][n];
			if (game(h) == 1)
				c[m][n] = '#';
			else
			{
				printf("输入错误");
				Sleep(1000);
				system("cls");
				goto restartaa;
			}
			system("cls");
			if(wina(c)==1)
				break;
		restartab:
			qipan(c);
			printf("玩家2请输入坐标x,y\n");
			scanf_s("%d,%d", &l, &e);
			m = l - 1;
			n = e - 1;
			h = c[m][n];
			if (game(h) == 1)
				c[m][n] = '*';
			else
			{
				printf("输入错误");
				Sleep(1000);
				system("cls");
				goto restartab;
			}
			system("cls");
			if (winb(c) == 1)
				break;
		}
		if (wina(c) == 1)
		{
			printf("玩家1胜");
			getchar();
			getchar();
			system("cls");
			for (m = 0; m <= 16; m++)
			{
				for (n = 0; n <= 16; n++)
					c[m][n] = ' ';
			}
			goto restart;
		}
		if (winb(c) == 1)
		{
			printf("玩家2胜");
			getchar();
			getchar();
			system("cls");
			for (m = 0; m <= 16; m++)
			{
				for (n = 0; n <= 16; n++)
					c[m][n] = ' ';
			}
			goto restart;
		}
	}
	if (b == 2)
	{
		while (1)
		{
		restartba:
			qipan(c);
			printf("玩家请输入坐标x,y\n");
			scanf_s("%d,%d", &l, &e);
			m = l - 1;
			n = e - 1;
			h = c[m][n];
			if (game(h) == 1&&l<=17&&e<=17)
				c[m][n] = '#';
			else
			{
				printf("输入错误");
				Sleep(1000);
				system("cls");
				goto restartba;
			}
			system("cls");
			if (wina(c) == 1)
				break;
		restartbb:
			qipan(c);
			m = rand() % 17;
			n = rand() % 17;
			h = c[m][n];
			if (game(h) == 1&&l<=17&&e<=17)
				c[m][n] = '*';
			else
			{
				goto restartbb;
			}
			system("cls");
			if (winb(c) == 1)
				break;
		}
		if (wina(c) == 1)
		{
			printf("玩家胜");
			getchar();
			getchar();
			system("cls");
			for (m = 0; m <= 16; m++)
			{
				for (n = 0; n <= 16; n++)
					c[m][n] = ' ';
			}
			goto restart;
		}
		if (winb(c) == 1)
		{
			printf("电脑胜");
			getchar();
			getchar();
			system("cls");
			for (m = 0; m <= 16; m++)
			{
				for (n = 0; n <= 16; n++)
					c[m][n] = ' ';
			}
			goto restart;
		}
	}
	qipan(c);
	return 0;
}
